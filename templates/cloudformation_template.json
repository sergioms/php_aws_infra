{
  "AWSTemplateFormatVersion" : "2010-09-09",
  
  "Description" : "AWS CloudFormation Template for PHP Webserver",
  
  "Parameters" : {
      
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "devsecops_test_instances",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },    
    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    } 
  },
  
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.micro"    : { "Arch" : "HVM64"  }
    },

    "AWSInstanceType2NATArch" : {
      "t2.micro"    : { "Arch" : "NATHVM64"  }
    }
,
    "AWSRegionArch2AMI" : {
      "eu-central-1"     : {"HVM64" : "ami-0d296099e30fdcb97", "HVMG2" : "ami-0aa1822e3eb913a11"}
    }

  },
    
  "Resources" : {     
      
     "WebServerInstance": {  
       "Type": "AWS::EC2::Instance",
       "Properties": {
         "ImageId" : "ami-0cc0a36f626a4fdf5",
         "InstanceType"   : { "Ref" : "InstanceType" },
         "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
         "Tenancy": "default",
         "KeyName"        : { "Ref" : "KeyName" },
         "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
              "#!/bin/bash -xe\n",
              "sudo apt-get update\n",
              "sudo apt-get install -y apache2\n",
              "sudo apt-get install -y php libapache2-mod-php\n",
              "sudo chown -R ubuntu:ubuntu /var/www/html/\n"
         ]]}}        
       }
    },
    
    "WebServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }      
    },
  "myDistribution" : {
    "Type" : "AWS::CloudFront::Distribution",
    "Properties" : {
        "DistributionConfig" : {
            "Origins" : [ {
                 "DomainName" : { "Fn::Join" : ["", [{ "Fn::GetAtt" : [ "WebServerInstance", "PublicIp" ] }, ".xip.io"] ] },
                "Id" : "myCustomOrigin",
                "CustomOriginConfig" : {
                   "HTTPPort" : "80",
                   "HTTPSPort" : "443",
                   "OriginProtocolPolicy" : "http-only"
                }
            } ],
            "Enabled" : "true",
            "Comment" : "Domain not registered, try manipulating /etc/host in your own machine",
            "DefaultRootObject" : "index.html",
            "DefaultCacheBehavior" : {
                "TargetOriginId" : "myCustomOrigin",
                "SmoothStreaming" : "false",  
                "ForwardedValues" : {
                    "QueryString" : "true",
                    "Cookies" : { "Forward" : "all" }
                },
                "ViewerProtocolPolicy" : "allow-all"
            }, 
            "CustomErrorResponses" : [ {
                "ErrorCode" : "404",
                "ResponsePagePath" : "/error-pages/404.html",
                "ResponseCode" : "200",
                "ErrorCachingMinTTL" : "30"
            } ],
            "PriceClass" : "PriceClass_200",
            "ViewerCertificate": { "CloudFrontDefaultCertificate" : "true" }
        }
    }
  }
 },
  "Outputs" : {
    "WebsiteURL" : {
      "Description" : "URL for newly created PHP server",
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServerInstance", "PublicDnsName" ]}]] }
    },
    "PublicIp" : {
      "Value" : { "Fn::GetAtt" : [ "WebServerInstance", "PublicIp" ]},
      "Description" : "Server's public ip Address"
    },
    "CloudFrontDistribution" : {
      "Description" : "PHP AWS Infra Distribution",
      "Value" : {"Ref" : "myDistribution"}
    },
    "CloudFrontDomainName" : {
      "Value" : { "Fn::GetAtt" : [ "myDistribution", "DomainName" ]},
      "Description" : "CloudFront Domain Name"
    },
  }
}